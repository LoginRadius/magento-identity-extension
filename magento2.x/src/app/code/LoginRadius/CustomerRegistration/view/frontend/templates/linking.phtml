<?php
$activationHelper = $this->helper('LoginRadius\Activation\Model\Helper\Data');
$customerRegHelper = $this->helper('LoginRadius\CustomerRegistration\Model\Helper\Data');
if ($activationHelper->siteApiKey() != '' && $activationHelper->siteApiSecret() != '') {
    $customerRegistrationHelper = $this->helper('LoginRadius\CustomerRegistration\Model\Helper\Data');
    $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
    $customerSession = $objectManager->get('Magento\Customer\Model\Session');
    ?>

    <?php if ($activationHelper->emailVerificationFlow() != 'disabled') { ?>
        <div id="account-linking-interface">
            <div class="page-title-wrapper">
                <h1 class="page-title">
                    <span class="base" data-ui-id="page-title-wrapper"><?php echo __('Account Linking') ?></span>  
                </h1>
            </div>
            <div id="loginradiusmessagediv" class="loginradiusmessagediv"></div>
            <div class="columns">
                <fieldset class="fieldset create info account form-account-linking">
                    <div style="margin:5px"></div>
                    <div class="lr_embed_bricks_200 interfacecontainerdiv" id="interfacecontainerdiv" ></div>
                </fieldset>
                <div style="clear:both;"></div>        
            </div>        
        </div>
    <?php } ?>
    <div class="columns">  
        <?php
        $socialAPIObject = new \LoginRadiusSDK\CustomerRegistration\Social\SocialLoginAPI($activationHelper->siteApiKey(), $activationHelper->siteApiSecret(), array("output_format" => 'json'));
        try {
            $socialProfileData = $socialAPIObject->getUserProfiledata($customerSession->getLoginRadiusAccessToken(), false, 'Provider');
        }
        catch (\LoginRadiusSDK\LoginRadiusException $e) {
            
        }
        if (isset($socialProfileData->Provider) && $socialProfileData->Provider == 'RAAS') {
            ?>
            <fieldset class="fieldset create info account">
                <legend class="legend" id="authenticationdiv" style="display: none;"><span><?php echo __('Two Factor Authentication') ?></span></legend><br>
                <div style="margin:5px"></div><div id="authentication-container" style="display: none;"></div>
            </fieldset>
        <?php } ?>
        <div style="clear:both;"></div>             
        <?php
        $userAPIObject = new \LoginRadiusSDK\CustomerRegistration\Authentication\UserAPI($activationHelper->siteApiKey(), $activationHelper->siteApiSecret(), array("output_format" => 'json'));
        try {
            $userprofile = $userAPIObject->getProfile($customerSession->getLoginRadiusAccessToken(), 'PhoneId');
        }
        catch (\LoginRadiusSDK\LoginRadiusException $e) {
            
        }
        try {
            $isEnabled = $userAPIObject->configureTwoFAByToken($customerSession->getLoginRadiusAccessToken());
        }
        catch (\LoginRadiusSDK\LoginRadiusException $e) {
            
        }
        if ((isset($isEnabled->IsGoogleAuthenticatorVerified) && $isEnabled->IsGoogleAuthenticatorVerified) || (isset($isEnabled->IsOTPAuthenticatorVerified) && $isEnabled->IsOTPAuthenticatorVerified)) {
            ?>
            <fieldset class="fieldset create info account backupcodesection">                                     
                <div id="edit-reset" class="form-item form-type-item">
                    <div class="resetCode" id="resetCode" onclick="resetBackupCodes()">Reset Code</div>
                </div>

                <div id="resettable" class="" style="display: none;">
                    <p>The two factor authentication backup code is already generated, please reset your two factor authentication backup code. </p>
                </div>

                <div id="lr_ciam_reset_table" style="display: none;">
                    <h3>If you lose your phone or can't receive codes via SMS, voice call or Google Authenticator, you can use backup codes to sign in. So please save these backup codes somewhere.</h3>
                    <div class="form-item form-type-item">
                        <div class="copyMessage" style="display:none;">Copied!</div>
                        <div title="Copy" class="mybackupcopy" onclick="changeIconColor()"></div>
                    </div>
                    <div id="backupcode-table-body"></div>
                </div> 
            </fieldset>
        <?php } ?>
        <fieldset class="fieldset create info account">
            <legend class="legend" id="updatephonediv"><span><?php echo __('Update Phone') ?></span></legend><br>  
            <?php if (isset($userprofile->PhoneId) && $userprofile->PhoneId != '') { ?>
                <label class="phoneid">Phone ID:&nbsp;&nbsp;<span><?php echo $userprofile->PhoneId ?></span></label>
            <?php } ?>
            <div id="updatephone-container" style="display:none;"></div>
        </fieldset>  
    </div>
    <script>
        require(['jquery', "mage/calendar"], function ($) {
            $(document).ready(function () {
                ciamForm.accountLinking();
                ciamForm.accountUnlinking();
                ciamForm.twoFaContainer();
                ciamForm.getBackupCodes();
                ciamForm.updatePhoneContainer();
            });
        });
        require(['jquery'], function ($) {
            $(document).ready(function () {
    <?php
    $style = '';
    $status = $customerSession->getLoginRadiusStatus();
    $message = $customerSession->getLoginRadiusMessage();
    if (!empty($status) && !empty($message)) {
        $status = ($status == 'Success') ? 'true' : 'false';
        ?>
                    responseHandler(<?php echo $status; ?>, '<?php echo $message; ?>');
        <?php
        $style = '<style>#loginradiusmessagediv{display:block !important;}</style>';
        $customerSession->unsLoginRadiusStatus();
        $customerSession->unsLoginRadiusMessage();
    }
    ?>
            });
        });
    <?php $accessToken = $customerSession->getLoginRadiusAccessToken(); ?>
        function resetBackupCodes() {
            var lrResetBackupInterval = setInterval(function () {
                if (typeof LRObject !== 'undefined')
                {
                    clearInterval(lrResetBackupInterval);
                    LRObject.api.resetBackupCode('<?php echo $accessToken ?>',
                            function (response) {
                                jQuery('#backupcode-table-body').empty();
                                for (var i = 0; i < response.BackUpCodes.length; i++) {
                                    var html = '';
                                    jQuery('#resettable').hide();
                                    jQuery('#lr_ciam_reset_table').show();

                                    html += '<div class="form-item code-list" id="backup-codes-' + i + '-field">';
                                    html += '<span class="backupCode">' + response.BackUpCodes[i] + '</span>';
                                    html += '</div>';

                                    jQuery('#backupcode-table-body').append(html);
                                    jQuery('#ciam-loading-image-div').hide();
                                }
                                jQuery('.mybackupcopy').click(function () {
                                    setClipboard();
                                });
                            }, function (errors) {
                        responseHandler(false, errors[0].Description);
                    });
                }
            }, 1);
        }
    </script>
    <?php
    echo $style;
}
?>